#!/bin/bash

# This checks if the script was run with sudo by cecking the effective user id
# If it wasn't run with sudo, lets the user know and exits the script
# Otherwise the script will continue
# Source: https://askubuntu.com/questions/15853/how-can-a-script-check-if-its-being-run-as-root
if [[ "$EUID" -ne 0 ]]; then
  echo "Please run the script with sudo"
  exit 1
fi

# This is checking to see if the script was run with options
# If it wasn't, it tells the users the options they can use and exits the script
if [[ $# -lt 1 ]]; then
  echo "Please run the script with -c to clone the configuration files, -i to install packages or -s to create symbolic links to the configuration files"
  exit 1
fi

# This will assign the home directory of the user that ran the script to the variable USER_HOME
# Source: https://stackoverflow.com/questions/61235185/how-to-get-home-directory-of-user-in-bash-script-root-mode
USER_HOME=$(eval echo ~$SUDO_USER)

while getopts ":isc" opt; do
  case ${opt} in
    c)
      #This will clone the config files necessary from the gitlab repository to the home directory
      git clone https://gitlab.com/cit2420/2420-as2-starting-files.git $USER_HOME/config-files
      ;;
      # This was supposed to be at the start of the script but providing it as a option so the script doesn't crash once the repository is cloned
    i) 
      # This will call the install-packages file
      source install-packages
      # This will call the function read-file in the install-packages file
      readfile
      # This is done so when this script file is called by the main script file, the function will be executed since it's not being executed in the install-packages file
      ;;
    s)
      # This will call the symbolic-links file
      source symbolic-links 
      # This will call the function create-links in the symbolic-links file
      createlinks
      # This is done so when this script file is called by the main script file, the function will be executed since it's not being executed in the symbolic-links file
      ;;
    \?)
      # This will let the user know what option to provide if they don't provide a valid option
      # Some extra error checking if the user doesn't pay attention to the first check
      echo "Please use either -c to clone, -i to install packages or -s to create symbolic links"
      exit 1
      ;;
  esac
done